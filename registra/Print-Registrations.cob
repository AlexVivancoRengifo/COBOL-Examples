000001*************************************************************
000002* PowerCOBOL/PowerFORM Demonstration Program
000003* Copyright 1997 Fujitsu Software Corporation
000004*************************************************************
000005* This program is designed to be called by the PowerCOBOL
000006* sheet "COBOL-Registrations".
000007* It shows how to use PowerFORM to print a report, using
000008* the descriptor "PRINTREG.PMD".
000009*
000010* Techniques demonstrated:
000011*		- Printing fixed and floating partitions
000012*			(See the various WRITE statements)
000013*     - Splitting text across several lines
000014*			(See W100-WORD-WRAP)
000015*     - Right aligning text
000016*         (See B100-RIGHT-JUSTIFY)
000017*     - Printing variable length lists
000018*         (See handling of BUYING-FACTOR-FIELDS in
000019*          M100-MOVE-DATA)
000020*
000021*  (Paragraphs are ordered alphabetically on the first letter
000022*    and numerically on the following 3 digits)
000023*
000024*************************************************************
000025*
000026*************************************************************
000027 IDENTIFICATION DIVISION.
000028 PROGRAM-ID.  Print-Registrations.
000030 ENVIRONMENT DIVISION.
000031 INPUT-OUTPUT SECTION.
000032 FILE-CONTROL.
000033
000034 		SELECT REGISTRATION-FILE ASSIGN TO REGFILE
000035			ORGANIZATION  	INDEXED
000036			ACCESS MODE		DYNAMIC
000037			RECORD KEY 		RF-LAST-NAME
000038						    WITH DUPLICATES
000039			ALTERNATE KEY 	RF-FIRST-NAME
000040						    WITH DUPLICATES
000041			ALTERNATE KEY 	RF-SERIAL-NO				
000042						    WITH DUPLICATES
000043			ALTERNATE KEY   RF-REG-ID
000044						    WITH DUPLICATES
000045			FILE STATUS IS	REG-FILE-STATUS.
000046
000047      SELECT PRINT-FILE ASSIGN TO PRTFILE
000048          ORGANIZATION    SEQUENTIAL
000049          ACCESS MODE     SEQUENTIAL
000050		FILE STATUS	PRT-STATUS-1
000051		      		PRT-STATUS-2
000052          FORMAT          PRT-FORMAT
000053          GROUP           PRT-GROUP.
000054  
000055 DATA DIVISION.
000056 FILE SECTION.
000057
000058 FD REGISTRATION-FILE.
000059 COPY "REGISTRATION-RECORD.CBL".
000060
000077 FD   PRINT-FILE.
000078 COPY  PRINTREG OF XMDLIB.
000079* "XMDLIB" is a key word indicating the COPY code is in a
000080*  FORM descriptor
000081
000082 WORKING-STORAGE SECTION.
000083 01 WK-AREA				   	PIC X(128).
000084 
000085 01 WRAP-PARAMETERS.        	
000086   03 WRAP-OUTPUT-LENGTH	   	PIC 9(4) COMP.
000087   03 WRAP-MAX-OUTPUT-FIELDS 	PIC 9(2) COMP.
000088   03 WRAP-OUTPUT-FIELD	   	PIC 9(2) COMP.
000089	 03 WRAP-STRING-BEGIN	   	PIC 9(4) COMP.
000090   03 WRAP-STRING-END		   	PIC 9(4) COMP.
000091   03 WRAP-OUTPUT-START	   	PIC 9(4) COMP.
000092   03 WRAP-SEARCH-POINT	   	PIC 9(4) COMP.
000093
000094 01 WRAP-OUTPUT-TABLE.
000095   03  WRAP-OUTPUT OCCURS 14 	PIC X(50).
000096 
000097 01 PRT-PARAM.
000098   03 PRT-FORMAT      		PIC X(08) VALUE " ".
000099   03 PRT-GROUP       		PIC X(08) VALUE " ".
000100
000101 01 REG-FILE-STATUS	  		PIC  X(2).
000102 88 OPERATION-SUCCESSFUL 	VALUE "00".
000103
000104 01 PRT-STATUS-1			PIC X(2).
000105
000106 01 PRT-STATUS-2			PIC X(4).
000107
000108 01 FILE-STATUS				PIC 9 VALUE 0.
000109 88 NOT-AT-END   			VALUE 0.
000110 88 END-OF-FILE  			VALUE 1.
000111 88 END-OF-RANGE 			VALUE 2.
000112
000113 01 DISPLAY-REGID				PIC +9(9).
000114
000115 01 COUNTERS.
000116   03 RECORDS-ON-PAGE			PIC 99.
000117	 03 BUYING-FACTOR-FIELDS	PIC 99.
000118	 03 BUYING-FACTOR-OFFSET   	PIC 9(4) COMP.
000119	 03 WK-POINTER				PIC 9(4) COMP.
000120   03 WK-POINTER-2			PIC 9(4) COMP.
000121
000122 01 STORES.
000123   03 WK-START-KEY			PIC X(35).
000124	 03 REDEFINES WK-START-KEY.
000125	   05 WK-START-KEY-NUM		PIC 9(9).
000126	   05  						PIC X(26).
000127
000128	 03 WK-END-KEY				PIC X(35).
000129   03 REDEFINES WK-END-KEY.
000130	   05 WK-END-KEY-NUM		PIC 9(9).
000131	   05					    PIC X(26).
000132
000133 01 BUYING-FACTOR-TABLE.
000134	03 BUYING-FACTOR-ITEM OCCURS 14 
000135								PIC X(20).
000136
000153 01 DETAIL-KEY-VALUE-TEXTS.
000154   03 PIC X(28) VALUE "Key Field - First Name:".
000155   03 PIC X(28) VALUE "Key Field - Last Name:".
000156   03 PIC X(28) VALUE "Key Field - Registration ID:".
000157   03 PIC X(28) VALUE "Key Field - Serial Number:".
000158 01 DETAIL-KEY-VALUE-TABLE REDEFINES DETAIL-KEY-VALUE-TEXTS.
000159   03 DETAIL-KEY-VALUE-TEXT OCCURS 4 
000160								PIC X(28).
000161
000162 01 HEADER-TEXTS.
000163   03	HEADER-1 		PIC X(18) VALUE "First Names:".
000164   03	HEADER-2		PIC X(18) VALUE "Last Names:".
000165   03	HEADER-3		PIC X(18) VALUE "Registration ID's:".
000166   03	HEADER-4		PIC X(18) VALUE "Serial Numbers:".
000167 01 HEADER-TABLE REDEFINES HEADER-TEXTS.
000168   03 HEADER-TEXT OCCURS 4 	PIC X(18).
000169
000170 01 FOOTER-RECORD-KEY-VALUES.
000171	 03 FOOTER-RECORD-KEY-VALUE OCCURS 3 
000172								PIC X(35) JUSTIFIED RIGHT.
000173
000174 01 OS-TEXTS.
000175   03 PIC X(30) VALUE "Windows 3.1x".
000176   03 PIC X(30) VALUE "Windows NT 3.51".
000177   03 PIC X(30) VALUE "Windows NT 4.x".
000178   03 PIC X(30) VALUE "Windows 95".
000179   03 PIC X(30) VALUE "Solaris 2.x".
000180   03 PIC X(30) VALUE "HP-UX 9.x".
000181   03 PIC X(30) VALUE "HP-UX 10.x".
000182   03 PIC X(30) VALUE "MVS".
000183   03 PIC X(30) VALUE "Other".
000184 01 OS-TABLE REDEFINES OS-TEXTS.
000185	 03 OS-TEXT OCCURS 9  		PIC X(30).
000186
000187 01 NO-PROG-TEXTS.
000188   03 PIC X(13) VALUE "100 or More".
000189   03 PIC X(13) VALUE "Less Than 100".
000190   03 PIC X(13) VALUE "Less Than 25".
000191   03 PIC X(13) VALUE "Less Than 5".
000192   03 PIC X(13) VALUE "None".
000193 01 NO-PROG-TABLE REDEFINES NO-PROG-TEXTS.
000194	 03 NO-PROG-TEXT OCCURS 5 	PIC X(13).
000195
000196 01 LOOK-REASON-TEXTS.
000197	 03 PIC X(27) VALUE "Ongoing Projects".
000198	 03 PIC X(27) VALUE "New, Specific Projects".
000199	 03 PIC X(27) VALUE "Future Anticipated Projects".
000200	 03 PIC X(27) VALUE "General Interest".
000201	 03 PIC X(27) VALUE "Other".
000202 01 LOOK-REASON-TABLE REDEFINES LOOK-REASON-TEXTS.
000203   03 LOOK-REASON-TEXT OCCURS 5 
000204								PIC X(27).
000205
000206 01 REVIEW-REASON-TEXTS.
000207   03 PIC X(30) VALUE "Client/Server Applications".
000208   03 PIC X(30) VALUE "Server Based Applications".
000209   03 PIC X(30) VALUE "Mainframe Based Applications".
000210   03 PIC X(30) VALUE "PC StandAlone Applications".
000211   03 PIC X(30) VALUE "Rehosting Applications".
000212   03 PIC X(30) VALUE "Other".
000213 01 REVIEW-REASON-TABLE REDEFINES REVIEW-REASON-TEXTS.
000214	 03 REVIEW-REASON-TEXT OCCURS 6 
000215								PIC X(30).
000216
000217 01 WHO-DECIDES-TEXTS.
000218	 03 PIC X(30) VALUE "You".
000219	 03 PIC X(30) VALUE "Team Leader".
000220	 03 PIC X(30) VALUE "MIS Manager".
000221	 03 PIC X(30) VALUE "End User Management".
000222	 03 PIC X(30) VALUE "Systems Integration".
000223	 03 PIC X(30) VALUE "Accounting, Finance...".
000224	 03 PIC X(30) VALUE "Other".
000225 01 WHO-DECIDES-TABLES REDEFINES WHO-DECIDES-TEXTS.
000226   03 WHO-DECIDES-TEXT OCCURS 7 
000227								PIC X(30).
000228
000229 01 JOB-FUNCTION-TEXTS.
000230   03 PIC X(40) VALUE "Applications Development".
000231   03 PIC X(40) VALUE "Management".
000232   03 PIC X(40) VALUE "Consulting".
000233   03 PIC X(40) VALUE "Computer Operations".
000234   03 PIC X(40) VALUE "Systems Integration".
000235   03 PIC X(40) VALUE "Accounting, Finance...".
000236   03 PIC X(40) VALUE "Other".
000237 01 JOB-FUNCTION-TABLE REDEFINES JOB-FUNCTION-TEXTS.
000238   03 JOB-FUNCTION-TEXT OCCURS 7 
000239								PIC X(40).
000240
000241 CONSTANT SECTION.
000242
000243 COPY "Registration-Constants.CBL".
000244
000245 01 FORM-DESCRIPTOR-VALUES.
000246   03 FORM-NAME				PIC X(8)  VALUE "PRINTREG".
000247   03 FORM-PAGE-HEAD-PARTITION  
000248                              PIC X(8)  VALUE "PAGEHD".
000249   03 FORM-DETAIL-HEAD-PARTITION
000250							    PIC X(8)  VALUE "DETHD".
000251	 03 FORM-SUMMARY-HEAD-PARTITION
000252                              PIC X(8)  VALUE "SUMHD".
000253   03 FORM-DETAIL-PARTITION   PIC X(8)  VALUE "DETAIL".
000254   03 FORM-SUMMARY-PARTITION  PIC X(8)  VALUE "SUMARY".
000255   03 FORM-PAGE-FOOT-PARTITION
000256                              PIC X(8)  VALUE "PAGEFT".
000257   03 FORM-RECORDS-PER-PAGE   PIC 99 COMP VALUE 3.
000258
000259 01 ASSORTED-TEXTS.
000260   03 TXT-BLANK				PIC X(7)  VALUE "<Blank>".
000261   03 TXT-REPORT-SUMMARY	    PIC X(18) VALUE
000262								"Report Summary for".
000263   03 TXT-SUMMARY-CONNECT     PIC X(3)  VALUE "to ".
000264
000265 01 LENGTHS-OFFSETS-CONSTANTS.
000266   03	CONST-SUMMARY-HEADING-LEN 
000267                              PIC 9(4) COMP VALUE 115.
000268   03 CONST-SUMMARY-LEAD-LEN  PIC 9(4) COMP VALUE 20.
000269   03 CONST-HEADER-TEXT-LEN   PIC 9(4) COMP VALUE 22.
000270   03 CONST-SUMMARY-GAP       PIC 9(4) COMP VALUE 3.
000271   03 CONST-SUMMARY-CONNECT-LEN
000272                              PIC 9(4) COMP VALUE 3.
000273* Lengths for centering the string determined by trial and error
000274   03 CONST-SUMMARY-CENTER-LEN
000275                              PIC 9(4) COMP VALUE 87.
000287   03 CONST-FOOTER-KEY-VALUE-LEN
000288                              PIC 9(4) COMP VALUE 35.
000289   03 CONST-EMAIL-LEN         PIC 9(4) COMP VALUE 40.
000290   03 CONST-DB-LEN            PIC 9(4) COMP VALUE 43.
000291   03 CONST-DB-LINES          PIC 9(4) COMP VALUE 3.
000292   03 CONST-SERVER-LEN        PIC 9(4) COMP VALUE 43.
000293   03 CONST-SERVER-LINES      PIC 9(4) COMP VALUE 3.
000294   03 CONST-BUY-LEN           PIC 9(4) COMP VALUE 20.
000295   03 CONST-BUY-LINES         PIC 9(4) COMP VALUE 14.
000296   03 CONST-START-KEY-LEN     PIC 9(4) COMP VALUE 35.
000297   03 CONST-END-KEY-LEN       PIC 9(4) COMP VALUE 35.
000298   03 CONST-CHECKED			PIC X         VALUE "1".
000299   03 CONST-HYPHEN            PIC X         VALUE "-".
000300   03 CONST-MAX-REG-ID        PIC 9(9)      VALUE 999999999.
000301
000302 01 BUYING-FACTOR-TEXTS.
000303   03 CONST-BUY-FRIEND       PIC X(6)  VALUE "Friend".
000304   03 CONST-BUY-RELIABILITY  PIC X(11) VALUE "Reliability".
000305   03 CONST-BUY-SALESMAN     PIC X(8)  VALUE "Salesman".
000306   03 CONST-BUY-PERFORMANCE  PIC X(11) VALUE "Performance".
000307   03 CONST-BUY-PLATFORMS    PIC X(9)  VALUE "Platforms".
000312   03 CONST-BUY-FEATURES     PIC X(8)  VALUE "Features".
000317   03 CONST-BUY-GOOD-REVIEW  PIC X(11) VALUE "Good Review".
000322   03 CONST-BUY-DONT-KNOW    PIC X(10) VALUE "Don't Know".
000327   03 CONST-BUY-ADVERTISEMENT
000328							   PIC X(13) VALUE "Advertisement".
000333   03 CONST-BUY-PRICE        PIC X(5)  VALUE "Price".
000334
000335 01 RANGE-TEXTS.
000336   03 CONST-START-OF-FILE    PIC X(13) VALUE "Start-of-File".
000337   03 CONST-END-OF-FILE      PIC X(11) VALUE "End-of-File".
000338
000339 LINKAGE SECTION.
000340 01 REPORT-REQUEST.  
000341   COPY "REPORT-REQUEST.CBL".
000342
000343 PROCEDURE DIVISION USING REPORT-REQUEST.
000344
000345 A000-MAIN-PARA.
000346* Initialize
000347		OPEN OUTPUT PRINT-FILE
000348		SET OPERATION-SUCCESSFUL TO TRUE
000349		OPEN INPUT REGISTRATION-FILE
000350		IF OPERATION-SUCCESSFUL  
000351  	  SET NOT-AT-END TO TRUE
000352		ELSE
000353	      SET RQ-FAILED-TO-OPEN-REG-FILE TO TRUE
000354		END-IF
000355		IF RQ-NO-ERROR
000356		  PERFORM A050-INITIALIZE
000357		END-IF		
000359
000360		IF RQ-NO-ERROR
000361		  MOVE HEADER-TEXT (RQ-REPORT-ORDER) TO PAGE-FOOTER
000362		  MOVE DETAIL-KEY-VALUE-TEXT (RQ-REPORT-ORDER) TO KEY-FIELD-LABEL
000363		  ADD 1 TO TOTAL-PRINTED  *> INITIAL-READ has read first record
000364		  PERFORM A100-WRITE-PAGES 
000365          UNTIL END-OF-RANGE
000366			   OR END-OF-FILE
000367      END-IF
000368
000375
000376* Note: Currently no error codes set in body of code (A100-WRITE-PAGES and sub-paragraphs)
000377*        but following IF statement left separate from previous identical test incase 
000378*        code is added later that sets errors in the main body. 
000379		IF RQ-NO-ERROR
000380		  IF NOT END-OF-FILE
000383*         Count records beyond end-of-range
000384          PERFORM R200-READ-TRAILING-RECORDS
000385			  UNTIL END-OF-FILE
000386		  END-IF
000387		  PERFORM A400-WRITE-SUMMARY
000442		END-IF
000443		CLOSE PRINT-FILE
000444			  REGISTRATION-FILE
000445		EXIT PROGRAM
000446      .
000447
000448 A050-INITIALIZE.
000450		INITIALIZE PRINTREG
000451				   STORES		
000452		MOVE 1 TO PAGE-NUMBER
000454
000455* Set name of FORM descriptor
000456		MOVE FORM-NAME TO PRT-FORMAT
000457
000458* Position file to first record required
000459      PERFORM R050-SET-START
000460		.
000461	
000462 A100-WRITE-PAGES.
000463* Write page header	
000464		MOVE FORM-PAGE-HEAD-PARTITION TO PRT-GROUP
000465		WRITE PRINTREG AFTER ADVANCING PAGE
000466      MOVE FORM-DETAIL-HEAD-PARTITION TO PRT-GROUP
000467		WRITE PRINTREG
000468
000469* Write records 
000470		MOVE 0 TO RECORDS-ON-PAGE
000471		INITIALIZE FOOTER-RECORD-KEY-VALUES
000472		PERFORM A200-WRITE-RECORDS 
000473		  UNTIL RECORDS-ON-PAGE = FORM-RECORDS-PER-PAGE
000474           OR END-OF-RANGE
000475           OR END-OF-FILE
000476
000477* Write page footer
000478		MOVE FOOTER-RECORD-KEY-VALUE (1) TO FOOTER-KEY1
000479		MOVE FOOTER-RECORD-KEY-VALUE (2) TO FOOTER-KEY2
000480		MOVE FOOTER-RECORD-KEY-VALUE (3) TO FOOTER-KEY3
000481		MOVE FORM-PAGE-FOOT-PARTITION TO PRT-GROUP
000482		WRITE PRINTREG
000483		ADD 1 TO PAGE-NUMBER
000484      .
000485
000486 A200-WRITE-RECORDS.
000487* Write record details
000488		ADD 1 TO RECORDS-ON-PAGE
000489
000490* Store record ID's for footer and key field at top of record
000491      EVALUATE TRUE
000492
000493		  WHEN RQ-FIRST-NAME
000494			IF RF-FIRST-NAME = SPACE
000495				MOVE TXT-BLANK TO KEY-FIELD-VALUE
000496								  FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000497			ELSE
000498				MOVE RF-FIRST-NAME TO KEY-FIELD-VALUE
000499									  FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000500			END-IF
000501			PERFORM B100-RIGHT-JUSTIFY
000502 
000503		  WHEN RQ-LAST-NAME
000504			IF RF-LAST-NAME = SPACE
000505				MOVE TXT-BLANK TO KEY-FIELD-VALUE
000506								  FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000507			ELSE
000508				MOVE RF-LAST-NAME TO KEY-FIELD-VALUE
000509									 FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000510			END-IF
000511			PERFORM B100-RIGHT-JUSTIFY
000512
000513		  WHEN RQ-REGISTRATION-ID
000514			IF RF-REG-IDX = SPACE
000515			  MOVE TXT-BLANK TO KEY-FIELD-VALUE
000516							    FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000517			ELSE
000518			  MOVE RF-REG-ID TO KEY-FIELD-VALUE
000519                              FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000520          END-IF
000521			PERFORM B100-RIGHT-JUSTIFY
000522
000523		  WHEN RQ-SERIAL-NUMBER
000524			IF RF-SERIAL-NO = SPACE
000525				MOVE TXT-BLANK TO KEY-FIELD-VALUE
000526								  FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000527			ELSE
000528				MOVE RF-SERIAL-NO TO KEY-FIELD-VALUE
000529									 FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000530			END-IF
000531			PERFORM B100-RIGHT-JUSTIFY
000532
000533		END-EVALUATE
000534  	
000535		PERFORM I100-INCREMENT-COUNTERS
000536		PERFORM M100-MOVE-DATA
000537
000538* Write record data
000539		MOVE FORM-DETAIL-PARTITION TO PRT-GROUP
000540		WRITE PRINTREG
000541
000542* Read next record
000543		READ REGISTRATION-FILE NEXT
000544		  AT END 
000545			SET END-OF-FILE TO TRUE
000546		  NOT AT END
000547			PERFORM A300-CHECK-RANGE
000548		END-READ
000549      .
000550
000551 A300-CHECK-RANGE.
000552
000553      EVALUATE TRUE
000554
000555		  WHEN RQ-FIRST-NAME
000556			IF RF-FIRST-NAME > RQ-END-NAME
000557			  SET END-OF-RANGE TO TRUE
000558			END-IF
000559 
000560		  WHEN RQ-LAST-NAME
000561			IF RF-LAST-NAME > RQ-END-NAME
000562			  SET END-OF-RANGE TO TRUE
000563			END-IF
000564
000565		  WHEN RQ-REGISTRATION-ID
000566			IF RF-REG-ID > RQ-END-REGISTRATION-ID
000567			  SET END-OF-RANGE TO TRUE
000568			END-IF
000569
000570		  WHEN RQ-SERIAL-NUMBER
000571			IF RF-SERIAL-NO > RQ-END-SERIAL-NO
000572			  SET END-OF-RANGE TO TRUE
000573			END-IF
000574
000575		END-EVALUATE
000576
000577		IF NOT END-OF-RANGE
000578		  ADD 1 TO TOTAL-PRINTED
000579		END-IF		
000580		ADD 1 TO TOTAL-REGISTRATIONS
000581  	.
000582
000583 A400-WRITE-SUMMARY.
000584
000585	  	MOVE FORM-PAGE-HEAD-PARTITION TO PRT-GROUP
000586		WRITE PRINTREG AFTER ADVANCING PAGE
000587
000588* Set up Summary Header
000589		MOVE TXT-REPORT-SUMMARY to REPORT-SUMMARY-HEADING
000590		MOVE HEADER-TEXT (RQ-REPORT-ORDER) 
000591        TO REPORT-SUMMARY-HEADING (CONST-SUMMARY-LEAD-LEN:CONST-HEADER-TEXT-LEN)
000592		PERFORM 
000593        VARYING WK-POINTER FROM CONST-SUMMARY-HEADING-LEN BY -1 
000594		  UNTIL REPORT-SUMMARY-HEADING (WK-POINTER:1) NOT = SPACE
000595		END-PERFORM
000596		ADD CONST-SUMMARY-GAP TO WK-POINTER
000597		MOVE WK-START-KEY 
000598        TO REPORT-SUMMARY-HEADING (WK-POINTER:CONST-START-KEY-LEN)
000599		PERFORM 
000600        VARYING WK-POINTER FROM CONST-SUMMARY-HEADING-LEN BY -1 
000601		  UNTIL REPORT-SUMMARY-HEADING (WK-POINTER:1) NOT = SPACE
000602		END-PERFORM
000603		ADD 2 TO WK-POINTER
000604		MOVE TXT-SUMMARY-CONNECT 
000605        TO REPORT-SUMMARY-HEADING (WK-POINTER:CONST-SUMMARY-CONNECT-LEN)
000606		ADD CONST-SUMMARY-CONNECT-LEN TO WK-POINTER
000608		MOVE WK-END-KEY 
000609        TO REPORT-SUMMARY-HEADING (WK-POINTER:CONST-END-KEY-LEN)
000610		PERFORM 
000611        VARYING WK-POINTER FROM CONST-SUMMARY-HEADING-LEN BY -1 
000612		  UNTIL REPORT-SUMMARY-HEADING (WK-POINTER:1) NOT = SPACE
000613		END-PERFORM
000614*     Roughly center the text
000627		IF WK-POINTER < CONST-SUMMARY-CENTER-LEN      
000628        SUBTRACT WK-POINTER FROM CONST-SUMMARY-CENTER-LEN
000629          GIVING WK-POINTER-2
000630      ELSE
000631		  MOVE 1 TO WK-POINTER-2
000632		END-IF
000633		MOVE REPORT-SUMMARY-HEADING TO WK-AREA
000634		MOVE SPACE TO REPORT-SUMMARY-HEADING
000635		MOVE WK-AREA (1:WK-POINTER) 
000636        TO REPORT-SUMMARY-HEADING (WK-POINTER-2:WK-POINTER)
000637		MOVE FORM-SUMMARY-HEAD-PARTITION TO PRT-GROUP
000638		WRITE PRINTREG
000639
000640      MOVE FORM-DETAIL-HEAD-PARTITION TO PRT-GROUP
000641		WRITE PRINTREG
000642      
000643		PERFORM C100-CALCULATE-PERCENTAGES
000644
000645		MOVE FORM-SUMMARY-PARTITION TO PRT-GROUP
000646		WRITE PRINTREG
000647
000648		MOVE SPACE TO  PAGE-FOOTER
000649					   FOOTER-KEY1
000650					   FOOTER-KEY2
000651					   FOOTER-KEY3
000652		MOVE FORM-PAGE-FOOT-PARTITION TO PRT-GROUP
000653		WRITE PRINTREG
000654  	.
000655
000656 B100-RIGHT-JUSTIFY.
000657		
000658		MOVE FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE)
000659		  TO WK-AREA
000660		PERFORM VARYING WK-POINTER FROM CONST-FOOTER-KEY-VALUE-LEN BY -1 
000661		  UNTIL
000662		    WK-AREA (WK-POINTER:1) NOT = SPACE
000663		  OR
000664			WK-POINTER = 1
000665		END-PERFORM
000666		MOVE WK-AREA (1:WK-POINTER)
000667		  TO FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE) 
000668                   (CONST-FOOTER-KEY-VALUE-LEN + 1 - WK-POINTER : WK-POINTER)
000669		MOVE SPACE 
000670	      TO FOOTER-RECORD-KEY-VALUE (RECORDS-ON-PAGE) 
000671                   (1:CONST-FOOTER-KEY-VALUE-LEN - WK-POINTER)
000672		.
000673
000674
000675 C100-CALCULATE-PERCENTAGES.
000676		COMPUTE PERCENT-JOB-APP-DEV ROUNDED
000677			= TOTAL-JOB-APP-DEV * 100 / TOTAL-PRINTED
000678		END-COMPUTE
000679		COMPUTE PERCENT-JOB-MANAGEMENT ROUNDED
000680			= TOTAL-JOB-MANAGEMENT * 100 / TOTAL-PRINTED
000681		END-COMPUTE
000682		COMPUTE PERCENT-JOB-CONSULTING ROUNDED
000683			= TOTAL-JOB-CONSULTING * 100 / TOTAL-PRINTED
000684		END-COMPUTE
000685		COMPUTE PERCENT-JOB-COMP-OPS ROUNDED
000686			= TOTAL-JOB-COMP-OPS * 100 / TOTAL-PRINTED
000687		END-COMPUTE
000688		COMPUTE PERCENT-JOB-SYS-INT ROUNDED
000689			= TOTAL-JOB-SYS-INT * 100 / TOTAL-PRINTED
000690		END-COMPUTE
000691		COMPUTE PERCENT-JOB-ACCOUNTING ROUNDED
000692			= TOTAL-JOB-ACCOUNTING * 100 / TOTAL-PRINTED
000693		END-COMPUTE
000694		COMPUTE PERCENT-JOB-OTHER ROUNDED
000695			= TOTAL-JOB-OTHER * 100 / TOTAL-PRINTED
000696		END-COMPUTE
000697
000698		COMPUTE PERCENT-DECIDE-YOU ROUNDED
000699			= TOTAL-DECIDE-YOU * 100 / TOTAL-PRINTED
000700		END-COMPUTE
000701		COMPUTE PERCENT-DECIDE-TEAM-LEADER ROUNDED
000702			= TOTAL-DECIDE-TEAM-LEADER * 100 / TOTAL-PRINTED
000703		END-COMPUTE
000704		COMPUTE PERCENT-DECIDE-MIS-MANAGER ROUNDED
000705			= TOTAL-DECIDE-MIS-MANAGER * 100 / TOTAL-PRINTED
000706		END-COMPUTE
000707		COMPUTE PERCENT-DECIDE-END-USER ROUNDED
000708			= TOTAL-DECIDE-END-USER * 100 / TOTAL-PRINTED
000709		END-COMPUTE
000710		COMPUTE PERCENT-DECIDE-SYS-INT ROUNDED
000711			= TOTAL-DECIDE-SYS-INT * 100 / TOTAL-PRINTED
000712		END-COMPUTE
000713		COMPUTE PERCENT-DECIDE-ACCOUNTING ROUNDED
000714			= TOTAL-DECIDE-ACCOUNTING * 100 / TOTAL-PRINTED
000715		END-COMPUTE
000716		COMPUTE PERCENT-DECIDE-OTHER ROUNDED
000717			= TOTAL-DECIDE-OTHER * 100 / TOTAL-PRINTED
000718		END-COMPUTE
000719
000720		COMPUTE PERCENT-POS-WIN31 ROUNDED
000721			= TOTAL-POS-WIN31 * 100 / TOTAL-PRINTED
000722		END-COMPUTE
000723		COMPUTE PERCENT-POS-WINNT35 ROUNDED
000724			= TOTAL-POS-WINNT35 * 100 / TOTAL-PRINTED
000725		END-COMPUTE
000726		COMPUTE PERCENT-POS-WINNT4X ROUNDED
000727			= TOTAL-POS-WINNT4X * 100 / TOTAL-PRINTED
000728		END-COMPUTE
000729		COMPUTE PERCENT-POS-WIN95 ROUNDED
000730			= TOTAL-POS-WIN95 * 100 / TOTAL-PRINTED
000731		END-COMPUTE
000732		COMPUTE PERCENT-POS-SOL2X ROUNDED
000733			= TOTAL-POS-SOL2X * 100 / TOTAL-PRINTED
000734		END-COMPUTE
000735		COMPUTE PERCENT-POS-HP9X ROUNDED
000736			= TOTAL-POS-HP9X * 100 / TOTAL-PRINTED
000737		END-COMPUTE
000738		COMPUTE PERCENT-POS-HP10X ROUNDED
000739			= TOTAL-POS-HP10X * 100 / TOTAL-PRINTED
000740		END-COMPUTE
000741		COMPUTE PERCENT-POS-MVS ROUNDED
000742			= TOTAL-POS-MVS * 100 / TOTAL-PRINTED
000743		END-COMPUTE
000744		COMPUTE PERCENT-POS-OTHER ROUNDED
000745			= TOTAL-POS-OTHER * 100 / TOTAL-PRINTED
000746		END-COMPUTE
000747
000748		COMPUTE PERCENT-SOS-WIN31 ROUNDED
000749			= TOTAL-SOS-WIN31 * 100 / TOTAL-PRINTED
000750		END-COMPUTE
000751		COMPUTE PERCENT-SOS-WINNT35 ROUNDED
000752			= TOTAL-SOS-WINNT35 * 100 / TOTAL-PRINTED
000753		END-COMPUTE
000754		COMPUTE PERCENT-SOS-WINNT4X ROUNDED
000755			= TOTAL-SOS-WINNT4X * 100 / TOTAL-PRINTED
000756		END-COMPUTE
000757		COMPUTE PERCENT-SOS-WIN95 ROUNDED
000758			= TOTAL-SOS-WIN95 * 100 / TOTAL-PRINTED
000759		END-COMPUTE
000760		COMPUTE PERCENT-SOS-SOL2X ROUNDED
000761			= TOTAL-SOS-SOL2X * 100 / TOTAL-PRINTED
000762		END-COMPUTE
000763		COMPUTE PERCENT-SOS-HP9X ROUNDED
000764			= TOTAL-SOS-HP9X * 100 / TOTAL-PRINTED
000765		END-COMPUTE
000766		COMPUTE PERCENT-SOS-HP10X ROUNDED
000767			= TOTAL-SOS-HP10X * 100 / TOTAL-PRINTED
000768		END-COMPUTE
000769		COMPUTE PERCENT-SOS-MVS ROUNDED
000770			= TOTAL-SOS-MVS * 100 / TOTAL-PRINTED
000771		END-COMPUTE
000772		COMPUTE PERCENT-SOS-OTHER ROUNDED
000773			= TOTAL-SOS-OTHER * 100 / TOTAL-PRINTED
000774		END-COMPUTE
000775
000776		COMPUTE PERCENT-GUI-100G ROUNDED
000777			= TOTAL-GUI-100G * 100 / TOTAL-PRINTED
000778		END-COMPUTE
000779		COMPUTE PERCENT-GUI-100L ROUNDED
000780			= TOTAL-GUI-100L * 100 / TOTAL-PRINTED
000781		END-COMPUTE
000782		COMPUTE PERCENT-GUI-25L ROUNDED
000783			= TOTAL-GUI-25L * 100 / TOTAL-PRINTED
000784		END-COMPUTE
000785		COMPUTE PERCENT-GUI-5L ROUNDED
000786			= TOTAL-GUI-5L * 100 / TOTAL-PRINTED
000787		END-COMPUTE
000788		COMPUTE PERCENT-GUI-NONE ROUNDED
000789			= TOTAL-GUI-NONE * 100 / TOTAL-PRINTED
000790		END-COMPUTE
000791
000792		COMPUTE PERCENT-COBOL-100G ROUNDED
000793			= TOTAL-COBOL-100G * 100 / TOTAL-PRINTED
000794		END-COMPUTE
000795		COMPUTE PERCENT-COBOL-100L ROUNDED
000796			= TOTAL-COBOL-100L * 100 / TOTAL-PRINTED
000797		END-COMPUTE
000798		COMPUTE PERCENT-COBOL-25L ROUNDED
000799			= TOTAL-COBOL-25L * 100 / TOTAL-PRINTED
000800		END-COMPUTE
000801		COMPUTE PERCENT-COBOL-5L ROUNDED
000802			= TOTAL-COBOL-5L * 100 / TOTAL-PRINTED
000803		END-COMPUTE
000804		COMPUTE PERCENT-COBOL-NONE ROUNDED
000805			= TOTAL-COBOL-NONE * 100 / TOTAL-PRINTED
000806		END-COMPUTE
000807
000808		COMPUTE PERCENT-LOOK-ONGOING ROUNDED
000809			= TOTAL-LOOK-ONGOING * 100 / TOTAL-PRINTED
000810		END-COMPUTE
000811		COMPUTE PERCENT-LOOK-SPECIFIC ROUNDED
000812			= TOTAL-LOOK-SPECIFIC * 100 / TOTAL-PRINTED
000813		END-COMPUTE
000814		COMPUTE PERCENT-LOOK-FUTURE ROUNDED
000815			= TOTAL-LOOK-FUTURE * 100 / TOTAL-PRINTED
000816		END-COMPUTE
000817		COMPUTE PERCENT-LOOK-GENERAL ROUNDED
000818			= TOTAL-LOOK-GENERAL * 100 / TOTAL-PRINTED
000819		END-COMPUTE
000820		COMPUTE PERCENT-LOOK-OTHER ROUNDED
000821			= TOTAL-LOOK-OTHER * 100 / TOTAL-PRINTED
000822		END-COMPUTE
000823
000824		COMPUTE PERCENT-REVIEW-CS ROUNDED
000825			= TOTAL-REVIEW-CS * 100 / TOTAL-PRINTED
000826		END-COMPUTE
000827		COMPUTE PERCENT-REVIEW-SERVER ROUNDED
000828			= TOTAL-REVIEW-SERVER * 100 / TOTAL-PRINTED
000829		END-COMPUTE
000830		COMPUTE PERCENT-REVIEW-MF ROUNDED
000831			= TOTAL-REVIEW-MF * 100 / TOTAL-PRINTED
000832		END-COMPUTE
000833		COMPUTE PERCENT-REVIEW-PC ROUNDED
000834			= TOTAL-REVIEW-PC * 100 / TOTAL-PRINTED
000835		END-COMPUTE
000836		COMPUTE PERCENT-REVIEW-REHOST ROUNDED
000837			= TOTAL-REVIEW-REHOST * 100 / TOTAL-PRINTED
000838		END-COMPUTE
000839		COMPUTE PERCENT-REVIEW-OTHER ROUNDED
000840			= TOTAL-REVIEW-OTHER * 100 / TOTAL-PRINTED
000841		END-COMPUTE
000842
000843		COMPUTE PERCENT-BUY-FRIEND ROUNDED
000844			= TOTAL-BUY-FRIEND * 100 / TOTAL-PRINTED
000845		END-COMPUTE
000846		COMPUTE PERCENT-BUY-SALESMAN ROUNDED
000847			= TOTAL-BUY-SALESMAN * 100 / TOTAL-PRINTED
000848		END-COMPUTE
000849		COMPUTE PERCENT-BUY-PLATFORMS ROUNDED
000850			= TOTAL-BUY-PLATFORMS * 100 / TOTAL-PRINTED
000851		END-COMPUTE
000852		COMPUTE PERCENT-BUY-REVIEW ROUNDED
000853			= TOTAL-BUY-REVIEW * 100 / TOTAL-PRINTED
000854		END-COMPUTE
000855		COMPUTE PERCENT-BUY-ADS ROUNDED
000856			= TOTAL-BUY-ADS * 100 / TOTAL-PRINTED
000857		END-COMPUTE
000858		COMPUTE PERCENT-BUY-PRICE ROUNDED
000859			= TOTAL-BUY-PRICE * 100 / TOTAL-PRINTED
000860		END-COMPUTE
000861		COMPUTE PERCENT-BUY-RELIABILITY ROUNDED
000862			= TOTAL-BUY-RELIABILITY * 100 / TOTAL-PRINTED
000863		END-COMPUTE
000864		COMPUTE PERCENT-BUY-PERFORMANCE ROUNDED
000865			= TOTAL-BUY-PERFORMANCE * 100 / TOTAL-PRINTED
000866		END-COMPUTE
000867		COMPUTE PERCENT-BUY-FEATURES ROUNDED
000868			= TOTAL-BUY-FEATURES * 100 / TOTAL-PRINTED
000869		END-COMPUTE
000870		COMPUTE PERCENT-BUY-DONT-KNOW ROUNDED
000871			= TOTAL-BUY-DONT-KNOW * 100 / TOTAL-PRINTED
000872		END-COMPUTE
000873		COMPUTE PERCENT-BUY-OTHER ROUNDED
000874			= TOTAL-BUY-OTHER * 100 / TOTAL-PRINTED
000875		END-COMPUTE
000876		.
000877
000878 I100-INCREMENT-COUNTERS.
000879		EVALUATE TRUE
000880		  WHEN RF-JOB-APP-DEV
000881			ADD 1 TO TOTAL-JOB-APP-DEV
000882		  WHEN RF-JOB-MANAGEMENT
000883			ADD 1 TO TOTAL-JOB-MANAGEMENT
000884		  WHEN RF-JOB-CONSULTING
000885			ADD 1 TO TOTAL-JOB-CONSULTING
000886		  WHEN RF-JOB-COMP-OPS
000887			ADD 1 TO TOTAL-JOB-COMP-OPS
000888		  WHEN RF-JOB-SYS-INT
000889  		ADD 1 TO TOTAL-JOB-SYS-INT
000890		  WHEN RF-JOB-ACCOUNTING
000891			ADD 1 TO TOTAL-JOB-ACCOUNTING
000892		  WHEN RF-JOB-OTHER
000893			ADD 1 TO TOTAL-JOB-OTHER
000894		END-EVALUATE
000895
000896		EVALUATE TRUE
000897		  WHEN RF-DECIDE-YOU
000898			ADD 1 TO TOTAL-DECIDE-YOU
000899		  WHEN RF-DECIDE-TEAM-LEADER
000900			ADD 1 TO TOTAL-DECIDE-TEAM-LEADER
000901		  WHEN RF-DECIDE-MIS-MANAGER
000902			ADD 1 TO TOTAL-DECIDE-MIS-MANAGER
000903		  WHEN RF-DECIDE-END-USER
000904		    ADD 1 TO TOTAL-DECIDE-END-USER
000905		  WHEN RF-DECIDE-SYS-INT
000906			ADD 1 TO TOTAL-DECIDE-SYS-INT
000907		  WHEN RF-DECIDE-ACCOUNTING
000908			ADD 1 TO TOTAL-DECIDE-ACCOUNTING
000909		  WHEN RF-DECIDE-OTHER
000910			ADD 1 TO TOTAL-DECIDE-OTHER
000911		END-EVALUATE
000912
000913		EVALUATE TRUE
000920		  WHEN RF-POS-WIN31
000921			ADD 1 TO TOTAL-POS-WIN31
000922		  WHEN RF-POS-WINNT35
000923			ADD 1 TO TOTAL-POS-WINNT35
000924		  WHEN RF-POS-WINNT4X 
000925			ADD 1 TO TOTAL-POS-WINNT4X
000926		  WHEN RF-POS-WIN95
000927		    ADD 1 TO TOTAL-POS-WIN95
000928		  WHEN RF-POS-SOL2X
000929			ADD 1 TO TOTAL-POS-SOL2X
000930		  WHEN RF-POS-HP9X
000931			ADD 1 TO TOTAL-POS-HP9X
000932		  WHEN RF-POS-HP10X
000933			ADD 1 TO TOTAL-POS-HP10X
000934		  WHEN RF-POS-MVS
000935			ADD 1 TO TOTAL-POS-MVS
000936		  WHEN RF-POS-OTHER
000937			ADD 1 TO TOTAL-POS-OTHER
000938		END-EVALUATE
000939	
000940		EVALUATE TRUE
000950		  WHEN RF-SOS-WIN31
000951			ADD 1 TO TOTAL-SOS-WIN31
000952		  WHEN RF-SOS-WINNT35
000953			ADD 1 TO TOTAL-SOS-WINNT35
000954		  WHEN RF-SOS-WINNT4X
000955			ADD 1 TO TOTAL-SOS-WINNT4X
000956		  WHEN RF-SOS-WIN95
000957		    ADD 1 TO TOTAL-SOS-WIN95
000958		  WHEN RF-SOS-SOL2X
000959			ADD 1 TO TOTAL-SOS-SOL2X
000960		  WHEN RF-SOS-HP9X
000961			ADD 1 TO TOTAL-SOS-HP9X
000962		  WHEN RF-SOS-HP10X
000963			ADD 1 TO TOTAL-SOS-HP10X
000964		  WHEN RF-SOS-MVS
000965			ADD 1 TO TOTAL-SOS-MVS
000966		  WHEN RF-SOS-OTHER
000967			ADD 1 TO TOTAL-SOS-OTHER
000968		END-EVALUATE
000969		
000970		EVALUATE TRUE
000976		  WHEN RF-GUI-100G
000977			ADD 1 TO TOTAL-GUI-100G
000978		  WHEN RF-GUI-100L
000979			ADD 1 TO TOTAL-GUI-100L
000980		  WHEN RF-GUI-25L
000981			ADD 1 TO TOTAL-GUI-25L
000982		  WHEN RF-GUI-5L
000983		    ADD 1 TO TOTAL-GUI-5L
000984		  WHEN  RF-GUI-NONE
000985			ADD 1 TO TOTAL-GUI-NONE
000986		END-EVALUATE
000987
000988		EVALUATE TRUE
000994		  WHEN RF-COBOL-100G
000995			ADD 1 TO TOTAL-COBOL-100G
000996		  WHEN RF-COBOL-100L
000997			ADD 1 TO TOTAL-COBOL-100L
000998		  WHEN RF-COBOL-25L
000999			ADD 1 TO TOTAL-COBOL-25L
001000		  WHEN RF-COBOL-5L
001001		    ADD 1 TO TOTAL-COBOL-5L
001002		  WHEN RF-COBOL-NONE
001003			ADD 1 TO TOTAL-COBOL-NONE
001004		END-EVALUATE
001005
001006		EVALUATE TRUE
001007		  WHEN RF-LOOK-ONGOING
001008			ADD 1 TO TOTAL-LOOK-ONGOING
001009		  WHEN RF-LOOK-SPECIFIC
001010			ADD 1 TO TOTAL-LOOK-SPECIFIC
001016		  WHEN RF-LOOK-FUTURE
001017			ADD 1 TO TOTAL-LOOK-FUTURE
001018		  WHEN RF-LOOK-GENERAL
001019		    ADD 1 TO TOTAL-LOOK-GENERAL
001020		  WHEN RF-LOOK-OTHER
001021			ADD 1 TO TOTAL-LOOK-OTHER
001022		END-EVALUATE
001023
001024		EVALUATE TRUE
001025		  WHEN RF-REVIEW-CS
001026			ADD 1 TO TOTAL-REVIEW-CS
001027		  WHEN RF-REVIEW-SERVER
001028			ADD 1 TO TOTAL-REVIEW-SERVER
001029		  WHEN RF-REVIEW-MF
001036			ADD 1 TO TOTAL-REVIEW-MF
001037		  WHEN RF-REVIEW-PC
001038		    ADD 1 TO TOTAL-REVIEW-PC
001039		  WHEN RF-REVIEW-REHOST
001040			ADD 1 TO TOTAL-REVIEW-REHOST
001041		  WHEN RF-REVIEW-OTHER
001042			ADD 1 TO TOTAL-REVIEW-OTHER
001043		END-EVALUATE
001044		
001045		IF RF-FRIEND = CONST-CHECKED
001046			ADD 1 TO TOTAL-BUY-FRIEND
001047		END-IF
001048		IF RF-SALESMAN = CONST-CHECKED
001049			ADD 1 TO TOTAL-BUY-SALESMAN
001050		END-IF
001051		IF RF-PLATFORMS = CONST-CHECKED
001052			ADD 1 TO TOTAL-BUY-PLATFORMS
001053		END-IF
001054		IF RF-GOOD-REVIEW = CONST-CHECKED
001055			ADD 1 TO TOTAL-BUY-REVIEW
001056		END-IF
001057		IF RF-ADVERTISEMENT = CONST-CHECKED
001058			ADD 1 TO TOTAL-BUY-ADS
001059		END-IF
001060		IF RF-PRICE = CONST-CHECKED
001061			ADD 1 TO TOTAL-BUY-PRICE
001062		END-IF
001063		IF RF-RELIABILITY = CONST-CHECKED
001064			ADD 1 TO TOTAL-BUY-RELIABILITY
001065		END-IF
001066		IF RF-PERFORMANCE = CONST-CHECKED
001067			ADD 1 TO TOTAL-BUY-PERFORMANCE
001068		END-IF
001069		IF RF-FEATURES = CONST-CHECKED
001070			ADD 1 TO TOTAL-BUY-FEATURES
001071		END-IF
001072		IF RF-DONT-KNOW = CONST-CHECKED
001073			ADD 1 TO TOTAL-BUY-DONT-KNOW
001074		END-IF
001075		IF RF-BUY-OTHER NOT = SPACE
001076			ADD 1 TO TOTAL-BUY-OTHER
001077		END-IF
001078	    .
001079
001080 M100-MOVE-DATA.
001081		MOVE RF-REG-ID TO REGID
001082		MOVE RF-REG-DATE TO REGDATE
001083		MOVE RF-SERIAL-NO TO SERIALNO
001084
001085* Note: output name field is 50 characters, input fields
001086*  are a total of 72 characters
001087      MOVE SPACE TO NAME
001088		MOVE 1 TO WK-POINTER
001089		STRING RF-FIRST-NAME
001090			DELIMITED BY SPACE
001091			INTO NAME
001092			POINTER WK-POINTER
001093		END-STRING
001094		MOVE SPACE TO NAME(WK-POINTER:1)
001095		ADD 1 TO WK-POINTER
001096		IF RF-MI NOT = SPACE
001097		  STRING RF-MI
001098			DELIMITED BY SPACE
001099			INTO NAME
001100			POINTER WK-POINTER
001101		  END-STRING
001102		  MOVE SPACE TO NAME(WK-POINTER:1)
001103		  ADD 1 TO WK-POINTER
001104		END-IF
001105		STRING RF-LAST-NAME 
001106			DELIMITED BY SPACE
001107			INTO NAME
001108			POINTER WK-POINTER
001109		END-STRING
001110
001111* Note: Loses last 8 characters of email
001112		MOVE RF-EMAIL (1:CONST-EMAIL-LEN) TO EMAIL1
001113		MOVE RF-EMAIL (CONST-EMAIL-LEN + 1:CONST-EMAIL-LEN) TO EMAIL2
001114		MOVE RF-EMAIL (2 * CONST-EMAIL-LEN + 1:40) TO EMAIL3
001115	
001116		MOVE RF-COMPANY TO COMPANY
001117		MOVE RF-JOB-TITLE TO JOBTITLE
001118      MOVE RF-ADDRESS1 TO ADDRESS1
001119		MOVE RF-ADDRESS2 TO ADDRESS2
001120		MOVE RF-CITY TO CITY
001121		MOVE RF-STATE TO STATE
001122		MOVE RF-ZIP TO ZIP
001123		MOVE RF-COUNTRY TO COUNTRY
001124		MOVE RF-AREA-CODE TO PHONE (1:3)
001125		MOVE CONST-HYPHEN TO PHONE (4:1)
001126		MOVE RF-PHONE TO PHONE (5:10)
001127		MOVE RF-EXTENSION TO EXTENSION
001128*  Note: Loses 27 characters of input fax number
001129		MOVE RF-FAX TO FAX
001130
001131*  If nothing is entered to the following survey fields they
001132*   are set to SPACE, which tests as zero.
001133		IF RF-PRIMARY-OS = 0
001134			MOVE SPACE TO PRIMARYOS
001135	 	ELSE
001136			MOVE OS-TEXT (RF-PRIMARY-OS) TO PRIMARYOS
001137		END-IF
001138		IF RF-SECONDARY-OS = 0
001139			MOVE SPACE TO SECONDARYOS
001140		ELSE
001141			MOVE OS-TEXT (RF-SECONDARY-OS) TO SECONDARYOS
001142		END-IF
001143		IF RF-NO-PROG-GUI = 0
001144			MOVE SPACE TO NOPROGGUI
001145		ELSE
001146			MOVE NO-PROG-TEXT (RF-NO-PROG-GUI) TO NOPROGGUI
001147		END-IF
001148		IF RF-NO-PROG-COBOL = 0
001149			MOVE SPACE TO NOPROGCOBOL
001150		ELSE
001151			MOVE NO-PROG-TEXT (RF-NO-PROG-COBOL) TO NOPROGCOBOL
001152		END-IF
001153		IF RF-LOOK-REASON = 0
001154			MOVE SPACE TO LOOKREASON
001155		ELSE
001156			MOVE LOOK-REASON-TEXT (RF-LOOK-REASON) TO LOOKREASON
001157		END-IF
001158		IF RF-REVIEW-REASON = 0
001159			MOVE SPACE TO REVIEWREASON
001160		ELSE
001161			MOVE REVIEW-REASON-TEXT (RF-REVIEW-REASON) TO REVIEWREASON
001162		END-IF
001163		IF RF-WHO-DECIDES = 0
001164			MOVE SPACE TO WHODECIDES
001165		ELSE
001166			MOVE WHO-DECIDES-TEXT (RF-WHO-DECIDES) TO WHODECIDES
001167		END-IF
001168		IF RF-JOB-FUNCTION = 0
001169			MOVE SPACE TO JOBFUNCTION
001170		ELSE
001171			MOVE JOB-FUNCTION-TEXT (RF-JOB-FUNCTION) TO JOBFUNCTION
001172		END-IF
001173		MOVE RF-DATABASES TO WK-AREA
001174		MOVE CONST-DB-LEN TO WRAP-OUTPUT-LENGTH
001175		MOVE CONST-DB-LINES TO WRAP-MAX-OUTPUT-FIELDS
001176		MOVE 1 TO WRAP-OUTPUT-FIELD
001177      MOVE 1 TO WRAP-OUTPUT-START
001178		MOVE SPACE TO WRAP-OUTPUT-TABLE
001179		PERFORM W100-WORD-WRAP
001180			UNTIL WK-AREA (WRAP-OUTPUT-START:WRAP-OUTPUT-LENGTH) = SPACE
001181			   OR WRAP-OUTPUT-FIELD > WRAP-MAX-OUTPUT-FIELDS
001182		MOVE WRAP-OUTPUT (1) TO DATABASES1
001183      MOVE WRAP-OUTPUT (2) TO DATABASES2
001184		MOVE WRAP-OUTPUT (3) TO DATABASES3
001185
001186		MOVE RF-SERVER-SYS TO WK-AREA
001187		MOVE CONST-SERVER-LEN TO WRAP-OUTPUT-LENGTH
001188		MOVE CONST-SERVER-LINES TO WRAP-MAX-OUTPUT-FIELDS
001189		MOVE 1 TO WRAP-OUTPUT-FIELD
001190      MOVE 1 TO WRAP-OUTPUT-START
001191		MOVE SPACE TO WRAP-OUTPUT-TABLE
001192		PERFORM W100-WORD-WRAP
001193			UNTIL WK-AREA (WRAP-OUTPUT-START:WRAP-OUTPUT-LENGTH) = SPACE
001194			   OR WRAP-OUTPUT-FIELD > WRAP-MAX-OUTPUT-FIELDS
001195		MOVE WRAP-OUTPUT (1) TO SERVERSYS1
001196		MOVE WRAP-OUTPUT (2) TO SERVERSYS2
001197		MOVE WRAP-OUTPUT (3) TO SERVERSYS3
001198
001199		MOVE 0 TO BUYING-FACTOR-FIELDS
001200		MOVE SPACE TO BUYING-FACTOR-TABLE
001212		IF RF-FRIEND = CONST-CHECKED
001213			ADD 1 TO BUYING-FACTOR-FIELDS
001214			MOVE CONST-BUY-FRIEND to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001215		END-IF
001216		IF RF-RELIABILITY = CONST-CHECKED
001217			ADD 1 TO BUYING-FACTOR-FIELDS
001218			MOVE CONST-BUY-RELIABILITY to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001219		END-IF
001220		IF RF-SALESMAN = CONST-CHECKED
001221			ADD 1 TO BUYING-FACTOR-FIELDS
001222			MOVE CONST-BUY-SALESMAN to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001223		END-IF
001224		IF RF-PERFORMANCE = CONST-CHECKED
001225			ADD 1 TO BUYING-FACTOR-FIELDS
001226			MOVE CONST-BUY-PERFORMANCE to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001227		END-IF
001228		IF RF-PLATFORMS = CONST-CHECKED
001229			ADD 1 TO BUYING-FACTOR-FIELDS
001230			MOVE CONST-BUY-PLATFORMS to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001231		END-IF
001232		IF RF-FEATURES = CONST-CHECKED
001233			ADD 1 TO BUYING-FACTOR-FIELDS
001234			MOVE CONST-BUY-FEATURES to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001235		END-IF
001236		IF RF-GOOD-REVIEW = CONST-CHECKED
001237			ADD 1 TO BUYING-FACTOR-FIELDS
001238			MOVE CONST-BUY-GOOD-REVIEW to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001239		END-IF
001240		IF RF-DONT-KNOW = CONST-CHECKED
001241			ADD 1 TO BUYING-FACTOR-FIELDS
001242			MOVE CONST-BUY-DONT-KNOW to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001243		END-IF
001244		IF RF-ADVERTISEMENT = CONST-CHECKED
001245			ADD 1 TO BUYING-FACTOR-FIELDS
001246			MOVE CONST-BUY-ADVERTISEMENT to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001247		END-IF
001248		IF RF-PRICE = CONST-CHECKED
001249			ADD 1 TO BUYING-FACTOR-FIELDS
001250			MOVE CONST-BUY-PRICE to BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001251		END-IF
001252		IF RF-BUY-OTHER NOT = SPACE
001253			MOVE RF-BUY-OTHER TO WK-AREA
001254			MOVE CONST-BUY-LEN TO WRAP-OUTPUT-LENGTH
001255			SUBTRACT BUYING-FACTOR-FIELDS FROM CONST-BUY-LINES 
001256            GIVING WRAP-MAX-OUTPUT-FIELDS			
001257			MOVE 1 TO WRAP-OUTPUT-FIELD
001258      	MOVE 1 TO WRAP-OUTPUT-START
001259			MOVE SPACE TO WRAP-OUTPUT-TABLE
001260			PERFORM W100-WORD-WRAP
001261			  UNTIL WK-AREA (WRAP-OUTPUT-START:WRAP-OUTPUT-LENGTH) = SPACE
001262			     OR WRAP-OUTPUT-FIELD > WRAP-MAX-OUTPUT-FIELDS
001263			MOVE 1 TO WK-POINTER
001264			PERFORM M200-FILL-BUYING-FACTORS 
001265				WRAP-OUTPUT-FIELD TIMES
001266		END-IF
001267
001268		MOVE BUYING-FACTOR-ITEM  (1) TO  BUYFACTOR1
001269		MOVE BUYING-FACTOR-ITEM  (2) TO  BUYFACTOR2
001270		MOVE BUYING-FACTOR-ITEM  (3) TO  BUYFACTOR3
001271		MOVE BUYING-FACTOR-ITEM  (4) TO  BUYFACTOR4
001272		MOVE BUYING-FACTOR-ITEM  (5) TO  BUYFACTOR5
001273		MOVE BUYING-FACTOR-ITEM  (6) TO  BUYFACTOR6
001274		MOVE BUYING-FACTOR-ITEM  (7) TO  BUYFACTOR7
001275		MOVE BUYING-FACTOR-ITEM  (8) TO  BUYFACTOR8
001276		MOVE BUYING-FACTOR-ITEM  (9) TO  BUYFACTOR9
001277		MOVE BUYING-FACTOR-ITEM (10) TO BUYFACTOR10
001278		MOVE BUYING-FACTOR-ITEM (11) TO BUYFACTOR11
001279		MOVE BUYING-FACTOR-ITEM (12) TO BUYFACTOR12
001280		MOVE BUYING-FACTOR-ITEM (13) TO BUYFACTOR13
001281		MOVE BUYING-FACTOR-ITEM (14) TO BUYFACTOR14
001282		.
001283
001284 M200-FILL-BUYING-FACTORS.
001285		ADD 1 TO BUYING-FACTOR-FIELDS
001286		MOVE WRAP-OUTPUT (WK-POINTER)
001287		  TO BUYING-FACTOR-ITEM (BUYING-FACTOR-FIELDS)
001288		ADD 1 TO WK-POINTER
001289		.
001290 R050-SET-START.		
001291* Set file to appropriate starting points
001292		EVALUATE TRUE
001293
001294		  WHEN RQ-FIRST-NAME
001295*         Set omitted range start and end fields
001296  	    IF RQ-START-NAME = SPACE
001297	          MOVE LOW-VALUES TO RQ-START-NAME
001298			  MOVE CONST-START-OF-FILE TO WK-START-KEY
001299		 	ELSE
001300			  MOVE RQ-START-NAME TO WK-START-KEY
001301		    END-IF
001302
001303 		    IF RQ-END-NAME = SPACE 
001304		      MOVE HIGH-VALUES TO RQ-END-NAME
001305			  MOVE CONST-END-OF-FILE TO WK-END-KEY
001306			ELSE
001307			  MOVE RQ-END-NAME TO WK-END-KEY 
001308		    END-IF
001309
001310*         Set start point in file
001311			MOVE LOW-VALUES TO RF-FIRST-NAME
001312			START REGISTRATION-FILE
001313			  KEY IS GREATER THAN OR EQUAL TO
001314				RF-FIRST-NAME
001315			  INVALID KEY
001316				SET RQ-INVALID-KEY TO TRUE
001317			END-START
001318			IF RQ-NO-ERROR
001319            PERFORM R100-READ-INITIAL-RECORDS
001320				WITH TEST AFTER 
001321				UNTIL RF-FIRST-NAME >= RQ-START-NAME
001322				   OR RQ-END-BEFORE-FIRST-VALUE
001323			  IF RF-FIRST-NAME > RQ-END-NAME
001324				SET RQ-NO-RECORDS-IN-RANGE TO TRUE
001325			  END-IF
001326			END-IF
001327
001328		  WHEN RQ-LAST-NAME
001329*         Set omitted range start and end fields
001330  	    IF RQ-START-NAME = SPACE
001331	          MOVE LOW-VALUES TO RQ-START-NAME
001332			  MOVE CONST-START-OF-FILE TO WK-START-KEY
001333		 	ELSE
001334			  MOVE RQ-START-NAME TO WK-START-KEY
001335		    END-IF
001336 		    IF RQ-END-NAME = SPACE 
001337		      MOVE HIGH-VALUES TO RQ-END-NAME
001338			  MOVE CONST-END-OF-FILE TO WK-END-KEY
001339			ELSE
001340			  MOVE RQ-END-NAME TO WK-END-KEY 
001341		    END-IF
001342
001343*         Set start point in file
001344			MOVE LOW-VALUES TO RF-LAST-NAME
001345			START REGISTRATION-FILE
001346			  KEY IS GREATER THAN OR EQUAL TO
001347				RF-LAST-NAME
001348			  INVALID KEY
001349				SET RQ-INVALID-KEY TO TRUE
001350			END-START
001351			IF RQ-NO-ERROR
001352            PERFORM R100-READ-INITIAL-RECORDS 
001353				WITH TEST AFTER 
001354				UNTIL RF-LAST-NAME >= RQ-START-NAME
001355				   OR RQ-END-BEFORE-FIRST-VALUE
001356			  IF RF-LAST-NAME > RQ-END-NAME
001357				SET RQ-NO-RECORDS-IN-RANGE TO TRUE
001358			  END-IF
001359			END-IF
001360
001361		  WHEN RQ-REGISTRATION-ID
001362*         Set omitted range start and end fields
001363			IF RQ-START-REGISTRATION-IDX = SPACE
001364			  MOVE 0 TO RQ-START-REGISTRATION-ID
001365			  MOVE CONST-START-OF-FILE to WK-START-KEY
001366			ELSE
001367			  MOVE RQ-START-REGISTRATION-ID TO WK-START-KEY-NUM
001368			END-IF
001369		    IF RQ-END-REGISTRATION-IDX = SPACE
001370		      MOVE CONST-MAX-REG-ID TO RQ-END-REGISTRATION-ID
001371			  MOVE CONST-END-OF-FILE TO WK-END-KEY
001372			ELSE
001373			  MOVE RQ-END-REGISTRATION-ID TO WK-END-KEY-NUM
001374		    END-IF
001375
001376*         Set start point in file
001377			MOVE 0 TO RF-REG-ID
001378			START REGISTRATION-FILE
001379			  KEY IS GREATER THAN OR EQUAL TO
001380				RF-REG-ID
001381			  INVALID KEY
001382				SET RQ-INVALID-KEY TO TRUE
001383			END-START
001384			IF RQ-NO-ERROR
001385            PERFORM R100-READ-INITIAL-RECORDS 
001386				WITH TEST AFTER 
001387				UNTIL RF-REG-ID >= RQ-START-REGISTRATION-ID
001388				   OR RQ-END-BEFORE-FIRST-VALUE
001389			  IF RF-REG-ID > RQ-END-REGISTRATION-ID
001390				SET RQ-NO-RECORDS-IN-RANGE TO TRUE
001391			  END-IF
001392			END-IF
001393
001394		  WHEN RQ-SERIAL-NUMBER
001395*         Set omitted range start and end fields
001396		    IF RQ-START-SERIAL-NO = SPACE
001397		      MOVE LOW-VALUES TO RQ-START-SERIAL-NO
001398			  MOVE CONST-START-OF-FILE TO WK-START-KEY
001399		 	ELSE
001400			  MOVE RQ-START-SERIAL-NO TO WK-START-KEY
001401		    END-IF
001402		    IF RQ-END-SERIAL-NO = SPACE
001403		      MOVE HIGH-VALUES TO RQ-END-SERIAL-NO
001404			  MOVE CONST-END-OF-FILE TO WK-END-KEY
001405			ELSE
001406			  MOVE RQ-END-SERIAL-NO TO WK-END-KEY 
001407		    END-IF
001408
001409*         Set start point in file
001410			MOVE LOW-VALUES TO RF-SERIAL-NO
001411			START REGISTRATION-FILE
001412			  KEY IS GREATER THAN OR EQUAL TO
001413				RF-SERIAL-NO
001414			  INVALID KEY
001415				SET RQ-INVALID-KEY TO TRUE
001416			END-START
001417			IF RQ-NO-ERROR
001418            PERFORM R100-READ-INITIAL-RECORDS 
001419				WITH TEST AFTER 
001420				UNTIL RF-SERIAL-NO >= RQ-START-SERIAL-NO
001421				   OR RQ-END-BEFORE-FIRST-VALUE
001422			  IF RF-SERIAL-NO > RQ-END-SERIAL-NO
001423				SET RQ-NO-RECORDS-IN-RANGE TO TRUE
001424			  END-IF
001425			END-IF
001426
001427		  WHEN OTHER
001428			SET RQ-INVALID-REQUEST-CODE TO TRUE
001429
001430		END-EVALUATE
001431		.
001432
001433 R100-READ-INITIAL-RECORDS.
001434		READ REGISTRATION-FILE NEXT
001435		  AT END 
001436			SET RQ-END-BEFORE-FIRST-VALUE TO TRUE
001437		  NOT AT END
001438			ADD 1 TO TOTAL-REGISTRATIONS
001439		END-READ
001440		.
001441
001442 R200-READ-TRAILING-RECORDS.
001443		READ REGISTRATION-FILE NEXT
001444		  AT END 
001445			SET END-OF-FILE TO TRUE
001446		  NOT AT END
001447			ADD 1 TO TOTAL-REGISTRATIONS
001448		END-READ
001449		.
001450
001451 W100-WORD-WRAP.
001452* Routine to ensure words are not split across lines.
001453* Expects input string in WK-AREA and WRAP-PARAMETERS to be set up, and 
001454*  WRAP-OUTPUT-TABLE to be initialized to spaces
001455
001456		IF WK-AREA (WRAP-OUTPUT-START + WRAP-OUTPUT-LENGTH - 1:1) = SPACE
001457			OR
001458		   WK-AREA (WRAP-OUTPUT-START + WRAP-OUTPUT-LENGTH:1) = SPACE
001459
001460*		  String is not being split
001461		  PERFORM W200-NO-WRAP
001462		ELSE
001463
001464*       String is being split
001465*         Find beginning of string
001466		  COMPUTE WRAP-SEARCH-POINT = WRAP-OUTPUT-START + WRAP-OUTPUT-LENGTH - 1
001467		  PERFORM VARYING WRAP-STRING-BEGIN 
001468					 FROM WRAP-SEARCH-POINT
001469					   BY -1
001470				    UNTIL WK-AREA (WRAP-STRING-BEGIN:1) = SPACE
001471		  END-PERFORM
001472*			Find end of string
001473		  ADD 1 TO WRAP-SEARCH-POINT
001474		  PERFORM VARYING WRAP-STRING-END		  
001475                   FROM WRAP-SEARCH-POINT
001476					   BY 1
001477				    UNTIL WK-AREA (WRAP-STRING-END:1) = SPACE
001478		  END-PERFORM
001479		  ADD 1 TO WRAP-STRING-BEGIN
001480		  IF WRAP-STRING-END - WRAP-STRING-BEGIN > WRAP-OUTPUT-LENGTH
001481*		    Don't wrap string if it won't fit into output length
001482			PERFORM W200-NO-WRAP
001483		  ELSE
001484			MOVE WK-AREA (WRAP-OUTPUT-START:WRAP-STRING-BEGIN - WRAP-OUTPUT-START)
001485			  TO WRAP-OUTPUT (WRAP-OUTPUT-FIELD)
001486			MOVE WRAP-STRING-BEGIN TO WRAP-OUTPUT-START
001487			ADD 1 TO WRAP-OUTPUT-FIELD
001488		  END-IF
001489		END-IF
001490		.
001491
001492
001493 W200-NO-WRAP.
001494		  MOVE WK-AREA (WRAP-OUTPUT-START:WRAP-OUTPUT-LENGTH) 
001495			TO WRAP-OUTPUT (WRAP-OUTPUT-FIELD)
001496		  ADD WRAP-OUTPUT-LENGTH TO WRAP-OUTPUT-START
001497		  ADD 1 TO WRAP-OUTPUT-FIELD
001498		  .
